openapi: 3.0.3
info:
  title: Banking System API
  version: 1.0.0
  description: A RESTful API for banking operations

servers:
  - url: http://localhost:8080/api/v1
    description: Development server

paths:
  /accounts:
    post:
      summary: Create a new account
      operationId: createAccount
      tags:
        - accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
      responses:
        '200':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /accounts/{id}:
    get:
      summary: Get account by ID
      operationId: getAccount
      tags:
        - accounts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Account found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /accounts/{id}/deposit:
    post:
      summary: Deposit money to account
      operationId: deposit
      tags:
        - accounts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositRequest'
      responses:
        '200':
          description: Deposit successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /accounts/{id}/withdraw:
    post:
      summary: Withdraw money from account
      operationId: withdraw
      tags:
        - accounts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawRequest'
      responses:
        '200':
          description: Withdrawal successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /accounts/{id}/transfer:
    post:
      summary: Transfer money between accounts
      operationId: transfer
      tags:
        - accounts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequest'
      responses:
        '200':
          description: Transfer successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        balance:
          type: string
          format: decimal
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CreateAccountRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        initial_balance:
          type: string
          format: decimal
          default: "0"

    DepositRequest:
      type: object
      required:
        - amount
      properties:
        amount:
          type: string
          format: decimal

    WithdrawRequest:
      type: object
      required:
        - amount
      properties:
        amount:
          type: string
          format: decimal

    TransferRequest:
      type: object
      required:
        - to_id
        - amount
      properties:
        to_id:
          type: integer
          format: int64
        amount:
          type: string
          format: decimal

    Response:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        data:
          type: object

    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string