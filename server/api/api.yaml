openapi: 3.0.3
info:
  title: Banking System API
  version: 1.0.0
  description: A RESTful API for banking operations

servers:
  - url: https://adi.tw/bank
    description: Release server
  - url: http://localhost:8080
    description: Development server

paths:
  /ping:
    get:
      summary: Health check endpoint
      operationId: ping
      tags:
        - health
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "pong"

  /v1/account:
    post:
      summary: Create a new account
      operationId: createAccount
      tags:
        - accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
      responses:
        '200':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/account/{id}:
    get:
      summary: Get account by ID
      operationId: getAccount
      tags:
        - accounts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Account found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/account/{id}/deposit:
    post:
      summary: Deposit money to account
      operationId: deposit
      tags:
        - accounts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositRequest'
      responses:
        '200':
          description: Deposit successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/account/{id}/withdraw:
    post:
      summary: Withdraw money from account
      operationId: withdraw
      tags:
        - accounts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawRequest'
      responses:
        '200':
          description: Withdrawal successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/account/{id}/transfer:
    post:
      summary: Transfer money between accounts
      operationId: transfer
      tags:
        - accounts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequest'
      responses:
        '200':
          description: Transfer successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /swagger/*any:
    get:
      summary: Swagger UI
      operationId: swaggerUI
      tags:
        - documentation
      responses:
        '200':
          description: Swagger UI page
          content:
            text/html:
              schema:
                type: string

  /api/swagger.yaml:
    get:
      summary: OpenAPI specification
      operationId: openAPISpec
      tags:
        - documentation
      responses:
        '200':
          description: OpenAPI specification file
          content:
            text/yaml:
              schema:
                type: string

components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "John Doe"
        balance:
          type: string
          description: "Balance formatted as decimal string with 2 decimal places"
          example: "1000.50"
        created_at:
          type: string
          format: date-time
          example: "2023-01-01T12:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2023-01-01T12:00:00Z"

    CreateAccountRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "John Doe"
        initial_balance:
          type: string
          description: "Initial balance as decimal string"
          example: "1000.00"
          default: "0.00"

    DepositRequest:
      type: object
      required:
        - amount
      properties:
        amount:
          type: string
          description: "Amount to deposit as decimal string"
          example: "100.50"

    WithdrawRequest:
      type: object
      required:
        - amount
      properties:
        amount:
          type: string
          description: "Amount to withdraw as decimal string"
          example: "50.25"

    TransferRequest:
      type: object
      required:
        - to_account_id
        - amount
      properties:
        to_account_id:
          type: integer
          format: int64
          description: "Target account ID for transfer"
          example: 2
        amount:
          type: string
          description: "Amount to transfer as decimal string"
          example: "75.00"

    SuccessResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: "success"
        data:
          oneOf:
            - $ref: '#/components/schemas/Account'
            - type: object
              additionalProperties: true

    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: "invalid parameters"
        data:
          type: object
          nullable: true